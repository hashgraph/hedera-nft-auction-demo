# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java Unit+Integration Tests

on:
  workflow_dispatch:
  pull_request:
     branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/hedera-nft-auction-demo-java-node/.gradle/caches
          ~/hedera-nft-auction-demo-java-node/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-`

    - name: Set up JDK 14
      uses: actions/setup-java@v2
      with:
        java-version: '14'
        distribution: 'adopt'

    - name: Grant execute permission for gradlew
      run: cd hedera-nft-auction-demo-java-node && chmod +x gradlew

    - name: Create certificates
      run: |
        cd docker-files
        openssl req -config certs.cnf -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout key.pem -out cert.pem

    - name: Build with Gradle
      env:
        OPERATOR_ID: ${{ secrets.OPERATOR_ID }}
        OPERATOR_KEY: ${{ secrets.OPERATOR_KEY }}
        NETWORK: testnet
        #       Run the REST API true/false
        REST_API: true
        API_PORT: 8081
        API_VERTICLE_COUNT: 1
        #       Run the admin REST API true/false
        ADMIN_API_PORT: 8082
        ADMIN_API_VERTICLE_COUNT: 1
        X_API_KEY: e6e006ec-c1ac-4204-9389-8d4ad4c12345
        NFT_STORAGE_API_KEY: ${{ secrets.NFT_STORAGE_API_KEY }}
        HTTPS_KEY_OR_PASS: ../docker-files/key.pem
        HTTPS_CERTIFICATE: ../docker-files/cert.pem
        #       Run the Auction Node true/false
        AUCTION_NODE: true
        #       only if participating in refund transactions
        REFUND_THREADS: 1
        TRANSFER_ON_WIN: true
        #       auction topic details
        TOPIC_ID:
        #       mirror node detail
        #       the mirror provider may be hedera, kabuto or dragonglass
        MIRROR_PROVIDER: hedera
        MIRROR_QUERY_FREQUENCY: 5000
        #       Database information for transaction and event logging
        DATABASE_URL: postgresql://localhost:5432/
        POSTGRES_DB: nftauction
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        #       REST Mirror urls
        REST_HEDERA_MAINNET: mainnet.mirrornode.hedera.com
        REST_HEDERA_TESTNET: testnet.mirrornode.hedera.com
        #        REST_HEDERA_PREVIEWNET: previewnet.mirrornode.hedera.com
        REST_HEDERA_PREVIEWNET: 162.222.182.83
      run: cd hedera-nft-auction-demo-java-node && ./gradlew build jacocoTestReport

    - name: Upload test reports
      run: cd hedera-nft-auction-demo-java-node && bash <(curl -s https://codecov.io/bash) -f build/reports/jacoco/report.xml
