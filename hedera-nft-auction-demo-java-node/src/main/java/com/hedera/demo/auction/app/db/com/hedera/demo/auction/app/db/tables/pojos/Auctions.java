/*
 * This file is generated by jOOQ.
 */
package com.hedera.demo.auction.app.db.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Auctions implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final String lastconsensustimestamp;
    private final Long winningbid;
    private final String winningaccount;
    private final String winningtimestamp;
    private final String winningtxid;
    private final String winningtxhash;
    private final String transfertxid;
    private final String transfertxhash;
    private final String tokenid;
    private final String auctionaccountid;
    private final String endtimestamp;
    private final Long reserve;
    private final String status;
    private final Boolean winnercanbid;
    private final String tokenmetadata;
    private final Long minimumbid;
    private final String starttimestamp;
    private final String tokenowner;
    private final String transferstatus;
    private final String title;
    private final String description;
    private final Boolean processrefunds;
    private final String createauctiontxid;

    public Auctions(Auctions value) {
        this.id = value.id;
        this.lastconsensustimestamp = value.lastconsensustimestamp;
        this.winningbid = value.winningbid;
        this.winningaccount = value.winningaccount;
        this.winningtimestamp = value.winningtimestamp;
        this.winningtxid = value.winningtxid;
        this.winningtxhash = value.winningtxhash;
        this.transfertxid = value.transfertxid;
        this.transfertxhash = value.transfertxhash;
        this.tokenid = value.tokenid;
        this.auctionaccountid = value.auctionaccountid;
        this.endtimestamp = value.endtimestamp;
        this.reserve = value.reserve;
        this.status = value.status;
        this.winnercanbid = value.winnercanbid;
        this.tokenmetadata = value.tokenmetadata;
        this.minimumbid = value.minimumbid;
        this.starttimestamp = value.starttimestamp;
        this.tokenowner = value.tokenowner;
        this.transferstatus = value.transferstatus;
        this.title = value.title;
        this.description = value.description;
        this.processrefunds = value.processrefunds;
        this.createauctiontxid = value.createauctiontxid;
    }

    public Auctions(
        Integer id,
        String lastconsensustimestamp,
        Long winningbid,
        String winningaccount,
        String winningtimestamp,
        String winningtxid,
        String winningtxhash,
        String transfertxid,
        String transfertxhash,
        String tokenid,
        String auctionaccountid,
        String endtimestamp,
        Long reserve,
        String status,
        Boolean winnercanbid,
        String tokenmetadata,
        Long minimumbid,
        String starttimestamp,
        String tokenowner,
        String transferstatus,
        String title,
        String description,
        Boolean processrefunds,
        String createauctiontxid
    ) {
        this.id = id;
        this.lastconsensustimestamp = lastconsensustimestamp;
        this.winningbid = winningbid;
        this.winningaccount = winningaccount;
        this.winningtimestamp = winningtimestamp;
        this.winningtxid = winningtxid;
        this.winningtxhash = winningtxhash;
        this.transfertxid = transfertxid;
        this.transfertxhash = transfertxhash;
        this.tokenid = tokenid;
        this.auctionaccountid = auctionaccountid;
        this.endtimestamp = endtimestamp;
        this.reserve = reserve;
        this.status = status;
        this.winnercanbid = winnercanbid;
        this.tokenmetadata = tokenmetadata;
        this.minimumbid = minimumbid;
        this.starttimestamp = starttimestamp;
        this.tokenowner = tokenowner;
        this.transferstatus = transferstatus;
        this.title = title;
        this.description = description;
        this.processrefunds = processrefunds;
        this.createauctiontxid = createauctiontxid;
    }

    /**
     * Getter for <code>public.auctions.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.auctions.lastconsensustimestamp</code>.
     */
    public String getLastconsensustimestamp() {
        return this.lastconsensustimestamp;
    }

    /**
     * Getter for <code>public.auctions.winningbid</code>.
     */
    public Long getWinningbid() {
        return this.winningbid;
    }

    /**
     * Getter for <code>public.auctions.winningaccount</code>.
     */
    public String getWinningaccount() {
        return this.winningaccount;
    }

    /**
     * Getter for <code>public.auctions.winningtimestamp</code>.
     */
    public String getWinningtimestamp() {
        return this.winningtimestamp;
    }

    /**
     * Getter for <code>public.auctions.winningtxid</code>.
     */
    public String getWinningtxid() {
        return this.winningtxid;
    }

    /**
     * Getter for <code>public.auctions.winningtxhash</code>.
     */
    public String getWinningtxhash() {
        return this.winningtxhash;
    }

    /**
     * Getter for <code>public.auctions.transfertxid</code>.
     */
    public String getTransfertxid() {
        return this.transfertxid;
    }

    /**
     * Getter for <code>public.auctions.transfertxhash</code>.
     */
    public String getTransfertxhash() {
        return this.transfertxhash;
    }

    /**
     * Getter for <code>public.auctions.tokenid</code>.
     */
    public String getTokenid() {
        return this.tokenid;
    }

    /**
     * Getter for <code>public.auctions.auctionaccountid</code>.
     */
    public String getAuctionaccountid() {
        return this.auctionaccountid;
    }

    /**
     * Getter for <code>public.auctions.endtimestamp</code>.
     */
    public String getEndtimestamp() {
        return this.endtimestamp;
    }

    /**
     * Getter for <code>public.auctions.reserve</code>.
     */
    public Long getReserve() {
        return this.reserve;
    }

    /**
     * Getter for <code>public.auctions.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>public.auctions.winnercanbid</code>.
     */
    public Boolean getWinnercanbid() {
        return this.winnercanbid;
    }

    /**
     * Getter for <code>public.auctions.tokenmetadata</code>.
     */
    public String getTokenmetadata() {
        return this.tokenmetadata;
    }

    /**
     * Getter for <code>public.auctions.minimumbid</code>.
     */
    public Long getMinimumbid() {
        return this.minimumbid;
    }

    /**
     * Getter for <code>public.auctions.starttimestamp</code>.
     */
    public String getStarttimestamp() {
        return this.starttimestamp;
    }

    /**
     * Getter for <code>public.auctions.tokenowner</code>.
     */
    public String getTokenowner() {
        return this.tokenowner;
    }

    /**
     * Getter for <code>public.auctions.transferstatus</code>.
     */
    public String getTransferstatus() {
        return this.transferstatus;
    }

    /**
     * Getter for <code>public.auctions.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Getter for <code>public.auctions.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Getter for <code>public.auctions.processrefunds</code>.
     */
    public Boolean getProcessrefunds() {
        return this.processrefunds;
    }

    /**
     * Getter for <code>public.auctions.createauctiontxid</code>.
     */
    public String getCreateauctiontxid() {
        return this.createauctiontxid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Auctions other = (Auctions) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.lastconsensustimestamp == null) {
            if (other.lastconsensustimestamp != null)
                return false;
        }
        else if (!this.lastconsensustimestamp.equals(other.lastconsensustimestamp))
            return false;
        if (this.winningbid == null) {
            if (other.winningbid != null)
                return false;
        }
        else if (!this.winningbid.equals(other.winningbid))
            return false;
        if (this.winningaccount == null) {
            if (other.winningaccount != null)
                return false;
        }
        else if (!this.winningaccount.equals(other.winningaccount))
            return false;
        if (this.winningtimestamp == null) {
            if (other.winningtimestamp != null)
                return false;
        }
        else if (!this.winningtimestamp.equals(other.winningtimestamp))
            return false;
        if (this.winningtxid == null) {
            if (other.winningtxid != null)
                return false;
        }
        else if (!this.winningtxid.equals(other.winningtxid))
            return false;
        if (this.winningtxhash == null) {
            if (other.winningtxhash != null)
                return false;
        }
        else if (!this.winningtxhash.equals(other.winningtxhash))
            return false;
        if (this.transfertxid == null) {
            if (other.transfertxid != null)
                return false;
        }
        else if (!this.transfertxid.equals(other.transfertxid))
            return false;
        if (this.transfertxhash == null) {
            if (other.transfertxhash != null)
                return false;
        }
        else if (!this.transfertxhash.equals(other.transfertxhash))
            return false;
        if (this.tokenid == null) {
            if (other.tokenid != null)
                return false;
        }
        else if (!this.tokenid.equals(other.tokenid))
            return false;
        if (this.auctionaccountid == null) {
            if (other.auctionaccountid != null)
                return false;
        }
        else if (!this.auctionaccountid.equals(other.auctionaccountid))
            return false;
        if (this.endtimestamp == null) {
            if (other.endtimestamp != null)
                return false;
        }
        else if (!this.endtimestamp.equals(other.endtimestamp))
            return false;
        if (this.reserve == null) {
            if (other.reserve != null)
                return false;
        }
        else if (!this.reserve.equals(other.reserve))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.winnercanbid == null) {
            if (other.winnercanbid != null)
                return false;
        }
        else if (!this.winnercanbid.equals(other.winnercanbid))
            return false;
        if (this.tokenmetadata == null) {
            if (other.tokenmetadata != null)
                return false;
        }
        else if (!this.tokenmetadata.equals(other.tokenmetadata))
            return false;
        if (this.minimumbid == null) {
            if (other.minimumbid != null)
                return false;
        }
        else if (!this.minimumbid.equals(other.minimumbid))
            return false;
        if (this.starttimestamp == null) {
            if (other.starttimestamp != null)
                return false;
        }
        else if (!this.starttimestamp.equals(other.starttimestamp))
            return false;
        if (this.tokenowner == null) {
            if (other.tokenowner != null)
                return false;
        }
        else if (!this.tokenowner.equals(other.tokenowner))
            return false;
        if (this.transferstatus == null) {
            if (other.transferstatus != null)
                return false;
        }
        else if (!this.transferstatus.equals(other.transferstatus))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.processrefunds == null) {
            if (other.processrefunds != null)
                return false;
        }
        else if (!this.processrefunds.equals(other.processrefunds))
            return false;
        if (this.createauctiontxid == null) {
            if (other.createauctiontxid != null)
                return false;
        }
        else if (!this.createauctiontxid.equals(other.createauctiontxid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.lastconsensustimestamp == null) ? 0 : this.lastconsensustimestamp.hashCode());
        result = prime * result + ((this.winningbid == null) ? 0 : this.winningbid.hashCode());
        result = prime * result + ((this.winningaccount == null) ? 0 : this.winningaccount.hashCode());
        result = prime * result + ((this.winningtimestamp == null) ? 0 : this.winningtimestamp.hashCode());
        result = prime * result + ((this.winningtxid == null) ? 0 : this.winningtxid.hashCode());
        result = prime * result + ((this.winningtxhash == null) ? 0 : this.winningtxhash.hashCode());
        result = prime * result + ((this.transfertxid == null) ? 0 : this.transfertxid.hashCode());
        result = prime * result + ((this.transfertxhash == null) ? 0 : this.transfertxhash.hashCode());
        result = prime * result + ((this.tokenid == null) ? 0 : this.tokenid.hashCode());
        result = prime * result + ((this.auctionaccountid == null) ? 0 : this.auctionaccountid.hashCode());
        result = prime * result + ((this.endtimestamp == null) ? 0 : this.endtimestamp.hashCode());
        result = prime * result + ((this.reserve == null) ? 0 : this.reserve.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.winnercanbid == null) ? 0 : this.winnercanbid.hashCode());
        result = prime * result + ((this.tokenmetadata == null) ? 0 : this.tokenmetadata.hashCode());
        result = prime * result + ((this.minimumbid == null) ? 0 : this.minimumbid.hashCode());
        result = prime * result + ((this.starttimestamp == null) ? 0 : this.starttimestamp.hashCode());
        result = prime * result + ((this.tokenowner == null) ? 0 : this.tokenowner.hashCode());
        result = prime * result + ((this.transferstatus == null) ? 0 : this.transferstatus.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.processrefunds == null) ? 0 : this.processrefunds.hashCode());
        result = prime * result + ((this.createauctiontxid == null) ? 0 : this.createauctiontxid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Auctions (");

        sb.append(id);
        sb.append(", ").append(lastconsensustimestamp);
        sb.append(", ").append(winningbid);
        sb.append(", ").append(winningaccount);
        sb.append(", ").append(winningtimestamp);
        sb.append(", ").append(winningtxid);
        sb.append(", ").append(winningtxhash);
        sb.append(", ").append(transfertxid);
        sb.append(", ").append(transfertxhash);
        sb.append(", ").append(tokenid);
        sb.append(", ").append(auctionaccountid);
        sb.append(", ").append(endtimestamp);
        sb.append(", ").append(reserve);
        sb.append(", ").append(status);
        sb.append(", ").append(winnercanbid);
        sb.append(", ").append(tokenmetadata);
        sb.append(", ").append(minimumbid);
        sb.append(", ").append(starttimestamp);
        sb.append(", ").append(tokenowner);
        sb.append(", ").append(transferstatus);
        sb.append(", ").append(title);
        sb.append(", ").append(description);
        sb.append(", ").append(processrefunds);
        sb.append(", ").append(createauctiontxid);

        sb.append(")");
        return sb.toString();
    }
}
