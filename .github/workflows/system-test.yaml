# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java System CI with Gradle

on:
  release:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: bash
    working-directory: hedera-nft-auction-demo-java-node

jobs:
  build:
    name: Build
    runs-on: nft-accelerators-linux-medium
    steps:
      - name: Checkout Code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

      - name: Set up JDK 14
        uses: actions/setup-java@2dfa2011c5b2a0f1489bf9e433881c92c1631f88 # v4.3.0
        with:
          java-version: '14'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          gradle-version: wrapper

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create certificates
        run: |
          cd ../docker-files
          openssl req -config certs.cnf -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout key.pem -out cert.pem

      - name: Build with Gradle
        env:
          OPERATOR_ID: ${{ secrets.OPERATOR_ID }}
          OPERATOR_KEY: ${{ secrets.OPERATOR_KEY }}
          MASTER_KEY: ${{ secrets.OPERATOR_KEY }}
          NETWORK: testnet
          #       Run the REST API true/false
          REST_API: true
          API_PORT: 8081
          API_VERTICLE_COUNT: 1
          #       Run the admin REST API true/false
          ADMIN_API_PORT: 8082
          ADMIN_API_VERTICLE_COUNT: 1
          HTTPS_KEY_OR_PASS: ../docker-files/key.pem
          HTTPS_CERTIFICATE: ../docker-files/cert.pem
          #       Run the Auction Node true/false
          AUCTION_NODE: true
          #       only if participating in refund transactions
          TRANSFER_ON_WIN: true
          #       auction topic details
          TOPIC_ID: ''
          #       mirror node detail
          #       the mirror provider may be hedera, kabuto or dragonglass
          MIRROR_PROVIDER: hedera
          MIRROR_QUERY_FREQUENCY: 5000
          #       Database information for transaction and event logging
          DATABASE_URL: postgresql://localhost:5432/
          POSTGRES_DB: nftauction
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          #       REST Mirror urls
          REST_HEDERA_MAINNET: mainnet.mirrornode.hedera.com
          REST_HEDERA_TESTNET: testnet.mirrornode.hedera.com
          #        REST_HEDERA_PREVIEWNET: previewnet.mirrornode.hedera.com
          REST_HEDERA_PREVIEWNET: 162.222.182.83
        run: ./gradlew build testSystem
